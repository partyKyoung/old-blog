{"version":3,"file":"63bb513341975aaa8ac4dd1f1ff076bb918f2312-4b1c4666f2390e29214c.js","mappings":"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","sources":["webpack://kyoungah-dev-blog/./src/commons/components/Container.tsx","webpack://kyoungah-dev-blog/./src/commons/components/Posts/PostsRoot.tsx","webpack://kyoungah-dev-blog/./src/commons/components/Posts/EmptyPost.tsx","webpack://kyoungah-dev-blog/./src/commons/components/Posts/FetchPostLoader.tsx","webpack://kyoungah-dev-blog/./src/commons/components/Posts/PostList.tsx","webpack://kyoungah-dev-blog/./src/commons/components/Posts/PostListItem.tsx","webpack://kyoungah-dev-blog/./src/commons/components/Posts/index.tsx","webpack://kyoungah-dev-blog/./src/commons/styles/globalStyle.ts","webpack://kyoungah-dev-blog/./src/commons/styles/mediaQuery.ts","webpack://kyoungah-dev-blog/./src/commons/components/Footer.tsx","webpack://kyoungah-dev-blog/./src/commons/templates/LayoutTemplate.tsx"],"sourcesContent":["import { css } from '@emotion/react';\n\nimport { mqMin } from '../../commons/styles/mediaQuery';\n\nimport type { HTMLAttributes, ReactNode } from 'react';\n\ntype Props = {\n    children: ReactNode;\n} & HTMLAttributes<HTMLSpanElement>\n\nfunction Container({children, ...props}: Props) {\n    return (\n        <div css={cssProps.root} {...props}>{children}</div>\n    )\n};\n\nconst cssProps = {\n    root: css({\n      width: '100%',\n      padding: '115px 16px 76px',\n      minHeight: 'calc(100vh - var(--header-height) - var(--footer-height))',\n  \n      [mqMin('sm')]: {\n        paddingLeft: 20,\n        paddingRight: 20\n      },\n  \n      [mqMin('lg')]: {\n        width: 768,\n        marginLeft: 'auto',\n        marginRight: 'auto',\n      },\n    })\n  };\n  \n\nexport default Container;","import { css, keyframes } from '@emotion/react';\n\nimport type { ReactNode } from 'react';\n\ntype Props = {\n    children: ReactNode;\n}\n\nfunction PostsRoot({children}: Props) {\n    return (\n        <div css={cssProps.root}>\n            {children}     \n        </div>\n    )\n}\n\nconst show = keyframes({\n    from: {opacity: 0},\n    to: {opacity: 1}\n})\n\nconst cssProps = {\n    root: css({\n        width: '100%',\n        animation: `0.6s ${show}`,\n    })\n}\n\nexport default PostsRoot;","import { css } from '@emotion/react';\n\nimport type { HTMLAttributes } from 'react';\n\nfunction EmptyPost({...props}: HTMLAttributes<HTMLDivElement>) {\n    return (\n        <div {...props} css={cssProps.root}>\n            <h3 css={cssProps.commingSoon}>COMING SOON</h3>\n            <br/>\n            <span css={cssProps.emptyPostText}>아직 등록된 포스트가 없어요<br/>조금만 기다려주세요</span>\n        </div>\n    );\n};\n\nconst cssProps = {\n    root: css({\n        width: '100%',\n        marginBottom: 16,\n        textAlign: 'center',\n        fontSize: 18,\n    }),\n    commingSoon: css({\n        fontSize: 24,\n        fontWeight: 600,\n        color: 'hsla(var(--palette-blue-100), 100%)'\n    }),\n    emptyPostText: css({\n        fontSize: 18,\n        lineHeight: 1.5,\n        color: 'hsla(var(--palette-gray-100), 100%)'\n    })\n}\n\nexport default EmptyPost;","import { css, keyframes } from '@emotion/react';\n\nimport type { HTMLAttributes } from 'react';\n\nfunction FetchPostLoader ({...props}: HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div {...props} css={cssProps.root}>\n        <span />\n        <span />\n        <span />\n    </div>\n  )\n}\n\nconst bounce = keyframes({\n    to: {\n        opacity: '0.3',\n        transform: 'translate3d(0, -16px, 0)'\n      }\n});\n\nconst cssProps = {\n    root: css({\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        gap: 6,\n\n        ['span']: {\n            width: 8,\n            height: 8,\n            backgroundColor: 'var(--primary-color)',\n            borderRadius: '50%',\n            animation: `0.6s ${bounce} infinite alternate`,\n        \n            ['&:nth-of-type(2)']: {\n              animationDelay: '0.3s'\n            },\n        \n            ['&:nth-of-type(3)']: {\n              animationDelay: '0.6s'\n            }\n        }\n    })\n}\n\nexport default FetchPostLoader;","import { css } from '@emotion/react';\n\nimport type { ReactNode } from 'react';\n\ntype Props = {\n    children: ReactNode;\n}\n\nfunction PostList({children}: Props) {\n    return (\n        <ul css={cssProps.root}>\n            {children}     \n        </ul>\n    )\n}\n\nconst cssProps = {\n    root: css({\n        width: '100%',\n    })\n}\n\nexport default PostList;","import { Link } from 'gatsby';\nimport { css } from '@emotion/react';\n\ntype Props = {\n    excerpt: string;\n    link: string;\n    title: string;\n}\n\nfunction PostListItem({\n    link,\n    title,\n    excerpt\n}: Props) {\n    return (\n        <li css={cssProps.root}>\n            <Link to={link} css={cssProps.postLink}>\n                <h3 css={cssProps.postTitle}>{title}</h3>\n                <p css={cssProps.postExcerpt}>{excerpt}</p>\n            </Link>\n        </li>\n    );\n}\n\nconst cssProps = {\n    root: css({\n        width: '100%',\n        listStyle: 'none',\n        ['&:not(:last-of-type)']: {\n            marginBottom: 60\n        }\n    }),\n    postLink: css({\n        color: '#000000',\n\n    }),\n    postTitle: css({\n        marginBottom: 8,\n        fontSize: 20,\n        fontWeight: 600,\n\n        ['a:hover &']: {\n            color: 'hsla(var(--base-blue), 29%)',\n            transition: 'color 0.25s cubic-bezier(0.455, 0.03, 0.515, 0.955) 0s'     \n         }\n\n    }),\n    postExcerpt: css({\n        lineHeight: 1.5,\n        fontSize: 15,\n        fontWeight: 400,\n\n        ['a:hover &']: {\n            color: 'hsla(var(--base-blue), 39%)',\n            transition: 'color 0.25s cubic-bezier(0.455, 0.03, 0.515, 0.955) 0s'     \n         }\n    })\n}\n\nexport default PostListItem;","import PostsRoot from \"./PostsRoot\";\n\nimport EmptyPost from \"./EmptyPost\";\nimport FetchPostLoader from './FetchPostLoader';\nimport PostList from \"./PostList\";\nimport PostListItem from \"./PostListItem\";\n\nconst Posts = Object.assign(PostsRoot, {\n    EmptyPost,\n    FetchPostLoader,\n    PostList,\n    PostListItem\n});\n\nexport default Posts;\n","import { css } from '@emotion/react';\n\nfunction globalStyle() {\n  return css`\n    html,\n    body {\n      height: 100%;\n      margin: 0;\n      padding: 0;\n    }\n\n    body {\n      position: relative;\n      margin: 0;\n      padding: 0;\n      word-break: keep-all;\n      word-wrap: break-word;\n      -webkit-text-size-adjust: none;\n      -webkit-overflow-scrolling: touch;\n      font-family: 'Nanum Gothic', Arial, Helvetica, sans-serif;\n    }\n\n    #___gatsby {\n      min-width: 280px;\n      width: 100%;\n    }\n\n    h1,\n    h2,\n    h3,\n    h4,\n    h5,\n    h6 {\n      margin: 0;\n      font-weight: 500;\n    }\n\n    ul,\n    ol {\n      margin: 0;\n      padding: 0;\n    }\n\n    fieldset {\n      margin: 0;\n      padding: 0;\n      border: none;\n    }\n\n    textarea {\n      resize: none;\n      outline: none;\n    }\n\n    button {\n      all: unset;\n      cursor: pointer;\n      padding: 0;\n      border: none;\n      outline: none;\n      text-align: center;\n      background-color: transparent;\n      box-sizing: border-box;\n      -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n      -webkit-tap-highlight-color: transparent;\n    }\n\n    a {\n      cursor: pointer;\n      text-decoration: none;\n      outline: none;\n      -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n      -webkit-tap-highlight-color: transparent;\n    }\n\n    i,\n    p,\n    div,\n    span,\n    li {\n      margin: 0;\n    }\n\n    em {\n      display: inline-block;\n      letter-spacing: -0.03em;\n    }\n\n    strong {\n      font-weight: 700;\n    }\n\n    table {\n      width: 100%;\n      border-collapse: collapse;\n      border-spacing: 0;\n    }\n\n    table caption {\n      display: none;\n    }\n\n    th,\n    td {\n      padding: 0;\n    }\n\n    input,\n    select {\n      border-radius: 0;\n    }\n\n    input:focus {\n      outline: none;\n    }\n\n    dl,\n    dd {\n      margin: 0;\n    }\n\n    figure {\n      margin: 0;\n    }\n\n    legend {\n      position: absolute !important;\n      left: -9999px;\n    }\n\n    img {\n      width: 100%;\n      vertical-align: top;\n    }\n\n    img[usemap],\n    map area {\n      outline: none;\n    }\n\n    hr {\n      display: none;\n    }\n\n    address {\n      font-style: normal;\n    }\n\n    input,\n    select,\n    label,\n    button,\n    textarea {\n      vertical-align: middle;\n    }\n\n    [type='file'] {\n      cursor: pointer;\n    }\n\n    * {\n      box-sizing: border-box;\n    }\n\n    :root {\n      --base-blue: 202, 100%;\n      --base-gray: 211, 19%;\n      --base-danger: 358, 67%;\n      --base-warning: 1, 100%;\n      --base-success: 168, 100%;\n\n      --palette-blue-10: var(--base-blue), 92%;\n      --palette-blue-50: var(--base-blue), 59%;\n      --palette-blue-100: var(--base-blue), 27%;\n\n      --palette-gray-10: var(--base-gray), 91%;\n      --palette-gray-20: var(--base-gray), 84%;\n      --palette-gray-40: var(--base-gray), 76%;\n      --palette-gray-60: var(--base-gray), 68%;\n      --palette-gray-80: var(--base-gray), 53%;\n      --palette-gray-100: var(--base-gray), 33%;\n\n      --primary-color: hsla(var(--palette-blue-50), 100%);\n      --secondary-color: hsla(var(--palette-blue-10), 100%);\n\n      --danger-color: hsla(var(--base-danger), 55%);\n      --warning-color: hsla(var(--base-warning), 71%);\n      --success-color: hsla(var(--base-success), 38%);\n\n      --header-height: 64px;\n      --footer-height: 106px;\n    }\n  `;\n}\n\nexport default globalStyle;\n","const mq = {\n  sss: 320,\n  xxs: 360,\n  xs: 480,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200,\n  xxl: 1600,\n  xlst: 1920,\n} as const;\n\ntype BreakPoint = keyof typeof mq;\n\n/**\n * @param breakPoint xxs: 360px, xs: 480px, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1600px, xlst: 1920px\n */\nexport function mqMax(breakPoint: BreakPoint) {\n  return `@media screen and (max-width: ${mq[breakPoint] - 0.02}px)`;\n}\n\n/**\n * @param breakPoint xss: 320 ss: 360px, xs: 480px, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1600px, xlst: 1920px\n */\nexport function mqMin(breakPoint: BreakPoint) {\n  return `@media screen and (min-width: ${mq[breakPoint]}px)`;\n}\n","import { css } from \"@emotion/react\";\n\nfunction Footer() {\n  return (\n    <footer css={cssProps.root}>\n      <span>Powered by Gatsby, Hosted by GitHub Pages.</span>\n      <span>©<a href=\"https://github.com/partykyoung\" rel=\"noopener\" target=\"_blank\">KyoungAh</a>, All rights reserved.</span>\n    </footer>\n  );\n};\n\nconst cssProps = {\n  root: css({\n    display: 'flex',\n    height: 'var(--footer-height)',\n    textAlign: 'center',\n    fontSize: 14,\n    color: 'hsla(var(--palette-gray-60), 100%)',\n    lineHeight: 1.5,\n    alignItems: 'center',\n    gap: 2,\n    justifyContent: 'center',\n    flexDirection: 'column',\n\n    ['a'] : {\n      color: 'hsla(var(--palette-gray-60), 100%)'\n    }\n  })\n}\n\nexport default Footer;","import React from 'react';\nimport { Global, css } from \"@emotion/react\";\n\nimport globalStyle from '../styles/globalStyle';\n\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\n\n\nimport type { ReactNode } from \"react\";\n\ntype Props = {\n  children: ReactNode;\n}\n\nfunction LayoutTemplate({ children }: Props) {\n  return (\n    <>\n      <Global styles={globalStyle()} />\n      <Header />\n      <div css={cssProps.root}>\n        {children}\n      </div>\n      <Footer />\n    </>\n  )\n}\n\nconst cssProps = {\n  root: css({\n    width: '100%',\n    margin: '0 auto',\n    maxWidth: '1200px'\n  })\n}\n\nexport default LayoutTemplate;\n"],"names":["cssProps","root","css","width","padding","minHeight","mqMin","paddingLeft","paddingRight","marginLeft","marginRight","_ref","children","props","___EmotionJSX","_extends","show","keyframes","from","opacity","to","animation","name","styles","commingSoon","emptyPostText","bounce","transform","display","alignItems","justifyContent","gap","height","backgroundColor","borderRadius","animationDelay","listStyle","marginBottom","postLink","postTitle","fontSize","fontWeight","color","transition","postExcerpt","lineHeight","link","title","excerpt","Link","Object","assign","PostsRoot","EmptyPost","FetchPostLoader","PostList","PostListItem","mq","sss","xxs","xs","sm","md","lg","xl","xxl","xlst","breakPoint","textAlign","flexDirection","href","rel","target","React","Global","globalStyle","Header","Footer"],"sourceRoot":""}