{"version":3,"file":"component---src-pages-about-tsx-3f7ffd9246ed2d6afbf9.js","mappings":"4JAgBA,MAAMA,EAAW,CACbC,MAAMC,EAAAA,EAAAA,IAAI,CACRC,MAAO,OACPC,QAAS,kBACTC,UAAW,4DAEX,EAACC,EAAAA,EAAAA,GAAM,OAAQ,CACbC,YAAa,GACbC,aAAc,IAGhB,EAACF,EAAAA,EAAAA,GAAM,OAAQ,CACbH,MAAO,IACPM,WAAY,OACZC,YAAa,SAEhB,cAIL,IA1BA,SAAkBC,GAA+B,IAA9B,SAACC,KAAaC,GAAaF,EAC1C,OACIG,EAAAA,EAAAA,IAAA,OAAAC,EAAAA,EAAAA,GAAA,CAAKb,IAAKF,EAASC,MAAUY,GAAQD,EAE7C,C,wFCEA,MAAMZ,EAAW,CACfC,KAAI,CAAAe,KAAC,UAADC,OAAC,wKAUP,MAnBA,SAAYN,GAA4B,IAA3B,IAAEO,KAAQL,GAAcF,EACnC,OACEG,EAAAA,EAAAA,IAAA,QAAAC,EAAAA,EAAAA,GAAA,CAAMb,IAAKF,EAASC,MAAUY,GAC3BK,EAGP,ECMA,MAAMlB,EAAW,CACfkB,IAAK,CACH,YAAe,CACbC,MAAO,UACPC,gBAAiB,oCACjBC,mBAAoB,0BACpBC,mBAAoB,QACpBC,yBAA0B,0CAC1BC,gBAAiB,QAKvB,MArBA,SAAgBb,GAAkC,IAAjC,KAAEc,EAAI,IAAEP,KAAQL,GAAcF,EAC7C,OACEG,EAAAA,EAAAA,IAACY,EAAAA,KAAI,CAACC,GAAIF,IACRX,EAAAA,EAAAA,IAACc,GAAGb,EAAAA,EAAAA,GAAA,CAACG,IAAKA,EAAKhB,IAAKF,EAASkB,KAASL,IAG5C,ECJA,MAAMb,EAAW,CACbC,KAAI,CAAAe,KAAC,UAADC,OAAC,4CAOT,MAdA,SAAiBN,GAA+B,IAA9B,SAACC,KAAaC,GAAaF,EACzC,OACIG,EAAAA,EAAAA,IAAA,OAAAC,EAAAA,EAAAA,GAAA,GAASF,EAAK,CAAEX,IAAKF,EAASC,OAAOW,EAE7C,ECHA,MALaiB,OAAOC,OAAOC,EAAU,CACjCC,QAAO,EACPJ,IACJ,G,qBCPqC,IAAAjB,EAAA,CAAAK,KAAA,UAAAC,OAAA,kkEAmMrC,IAjMA,WACE,OAAAN,CA8LF,C,uDCjMA,MAAMsB,EAAK,CACTC,IAAK,IACLC,IAAK,IACLC,GAAI,IACJC,GAAI,IACJC,GAAI,IACJC,GAAI,IACJC,GAAI,KACJC,IAAK,KACLC,KAAM,MAeD,SAASpC,EAAMqC,GACpB,MAAM,iCAAkCV,EAAGU,GAAW,KACxD,C,yDCLA,MAAM3C,EAAW,CACfC,KAAI,CAAAe,KAAC,UAADC,OAAC,8CAOP,IAnBA,SAAuBN,GAAuB,IAAtB,SAAEC,GAAiBD,EACzC,OACEG,EAAAA,EAAAA,IAAA8B,EAAAA,SAAA,MACE9B,EAAAA,EAAAA,IAAC+B,EAAAA,GAAM,CAAC5B,QAAQ6B,EAAAA,EAAAA,QAChBhC,EAAAA,EAAAA,IAAA,OAAKZ,IAAKF,EAASC,MAChBW,GAIT,C","sources":["webpack://kyoungah-dev-blog/./src/commons/components/Container.tsx","webpack://kyoungah-dev-blog/./src/commons/components/Tags/Tag.tsx","webpack://kyoungah-dev-blog/./src/commons/components/Tags/LinkTag.tsx","webpack://kyoungah-dev-blog/./src/commons/components/Tags/TagsRoot.tsx","webpack://kyoungah-dev-blog/./src/commons/components/Tags/index.tsx","webpack://kyoungah-dev-blog/./src/commons/styles/globalStyle.ts","webpack://kyoungah-dev-blog/./src/commons/styles/mediaQuery.ts","webpack://kyoungah-dev-blog/./src/commons/templates/NoLayoutTemplate.tsx"],"sourcesContent":["import { css } from '@emotion/react';\n\nimport { mqMin } from '../../commons/styles/mediaQuery';\n\nimport type { HTMLAttributes, ReactNode } from 'react';\n\ntype Props = {\n    children: ReactNode;\n} & HTMLAttributes<HTMLSpanElement>\n\nfunction Container({children, ...props}: Props) {\n    return (\n        <div css={cssProps.root} {...props}>{children}</div>\n    )\n};\n\nconst cssProps = {\n    root: css({\n      width: '100%',\n      padding: '115px 16px 76px',\n      minHeight: 'calc(100vh - var(--header-height) - var(--footer-height))',\n  \n      [mqMin('sm')]: {\n        paddingLeft: 20,\n        paddingRight: 20\n      },\n  \n      [mqMin('lg')]: {\n        width: 768,\n        marginLeft: 'auto',\n        marginRight: 'auto',\n      },\n    })\n  };\n  \n\nexport default Container;","import { css } from '@emotion/react';\n\nimport type { HTMLAttributes } from 'react';\n\ntype Props = {\n  tag: string;\n} & HTMLAttributes<HTMLSpanElement>;\n\nfunction Tag({ tag, ...props }: Props) {\n  return (\n    <span css={cssProps.root} {...props}>\n      {tag}\n    </span>\n  );\n}\n\nconst cssProps = {\n  root: css({\n    display: 'inline-block',\n    backgroundColor: 'hsla(var(--palette-blue-10), 100%)',\n    borderRadius: 4,\n    color: 'hsla(var(--palette-gray-80), 100%)',\n    fontSize: 14,\n    padding: '4px 16px',\n  }),\n};\n\nexport default Tag;\n","import type { HTMLAttributes } from 'react';\n\nimport { Link } from 'gatsby';\nimport { css } from '@emotion/react';\n\nimport Tag from './Tag';\n\ntype Props = {\n  link: string;\n  tag: string;\n} & HTMLAttributes<HTMLSpanElement>;\n\nfunction LinkTag({ link, tag, ...props }: Props) {\n  return (\n    <Link to={link}>\n      <Tag tag={tag} css={cssProps.tag} {...props} />\n    </Link>\n  );\n}\n\nconst cssProps = {\n  tag: {\n    ['a:hover &']: {\n      color: '#FFFFFF',\n      backgroundColor: 'hsla(var(--palette-blue-50), 60%)',\n      transitionProperty: 'color, background-color',\n      transitionDuration: '0.25s',\n      transitionTimingFunction: 'cubic-bezier(0.455, 0.03, 0.515, 0.955)',\n      transitionDelay: '0s',\n    },\n  },\n};\n\nexport default LinkTag;\n","import { css } from '@emotion/react';\n\nimport type { HTMLAttributes, ReactNode } from 'react';\n\ntype Props = {\n    children: ReactNode;\n} & HTMLAttributes<HTMLDivElement>;\n\nfunction TagsRoot({children, ...props}: Props) {\n    return (\n        <div {...props} css={cssProps.root}>{children}</div>\n    )\n}\n\nconst cssProps = {\n    root: css({\n        display: 'flex',\n        flexWrap: 'wrap',\n        gap: '8px 6px',\n    })\n}\n\nexport default TagsRoot;","import LinkTag from \"./LinkTag\";\nimport Tag from \"./Tag\";\nimport TagsRoot from \"./TagsRoot\";\n\nconst Tags = Object.assign(TagsRoot, {\n    LinkTag,\n    Tag\n});\n\nexport default Tags;","import { css } from '@emotion/react';\n\nfunction globalStyle() {\n  return css`\n    html,\n    body {\n      height: 100%;\n      margin: 0;\n      padding: 0;\n    }\n\n    body {\n      position: relative;\n      margin: 0;\n      padding: 0;\n      word-break: keep-all;\n      word-wrap: break-word;\n      -webkit-text-size-adjust: none;\n      -webkit-overflow-scrolling: touch;\n      font-family: 'Nanum Gothic', Arial, Helvetica, sans-serif;\n    }\n\n    #___gatsby {\n      min-width: 280px;\n      width: 100%;\n    }\n\n    h1,\n    h2,\n    h3,\n    h4,\n    h5,\n    h6 {\n      margin: 0;\n      font-weight: 500;\n    }\n\n    ul,\n    ol {\n      margin: 0;\n      padding: 0;\n    }\n\n    fieldset {\n      margin: 0;\n      padding: 0;\n      border: none;\n    }\n\n    textarea {\n      resize: none;\n      outline: none;\n    }\n\n    button {\n      all: unset;\n      cursor: pointer;\n      padding: 0;\n      border: none;\n      outline: none;\n      text-align: center;\n      background-color: transparent;\n      box-sizing: border-box;\n      -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n      -webkit-tap-highlight-color: transparent;\n    }\n\n    a {\n      cursor: pointer;\n      text-decoration: none;\n      outline: none;\n      -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n      -webkit-tap-highlight-color: transparent;\n    }\n\n    i,\n    p,\n    div,\n    span,\n    li {\n      margin: 0;\n    }\n\n    em {\n      display: inline-block;\n      letter-spacing: -0.03em;\n    }\n\n    strong {\n      font-weight: 700;\n    }\n\n    table {\n      width: 100%;\n      border-collapse: collapse;\n      border-spacing: 0;\n    }\n\n    table caption {\n      display: none;\n    }\n\n    th,\n    td {\n      padding: 0;\n    }\n\n    input,\n    select {\n      border-radius: 0;\n    }\n\n    input:focus {\n      outline: none;\n    }\n\n    dl,\n    dd {\n      margin: 0;\n    }\n\n    figure {\n      margin: 0;\n    }\n\n    legend {\n      position: absolute !important;\n      left: -9999px;\n    }\n\n    img {\n      width: 100%;\n      vertical-align: top;\n    }\n\n    img[usemap],\n    map area {\n      outline: none;\n    }\n\n    hr {\n      display: none;\n    }\n\n    address {\n      font-style: normal;\n    }\n\n    input,\n    select,\n    label,\n    button,\n    textarea {\n      vertical-align: middle;\n    }\n\n    [type='file'] {\n      cursor: pointer;\n    }\n\n    * {\n      box-sizing: border-box;\n    }\n\n    :root {\n      --base-blue: 202, 100%;\n      --base-gray: 211, 19%;\n      --base-danger: 358, 67%;\n      --base-warning: 1, 100%;\n      --base-success: 168, 100%;\n\n      --palette-blue-10: var(--base-blue), 92%;\n      --palette-blue-50: var(--base-blue), 59%;\n      --palette-blue-100: var(--base-blue), 27%;\n\n      --palette-gray-10: var(--base-gray), 91%;\n      --palette-gray-20: var(--base-gray), 84%;\n      --palette-gray-40: var(--base-gray), 76%;\n      --palette-gray-60: var(--base-gray), 68%;\n      --palette-gray-80: var(--base-gray), 53%;\n      --palette-gray-100: var(--base-gray), 33%;\n\n      --primary-color: hsla(var(--palette-blue-50), 100%);\n      --secondary-color: hsla(var(--palette-blue-10), 100%);\n\n      --danger-color: hsla(var(--base-danger), 55%);\n      --warning-color: hsla(var(--base-warning), 71%);\n      --success-color: hsla(var(--base-success), 38%);\n\n      --header-height: 64px;\n      --footer-height: 106px;\n    }\n  `;\n}\n\nexport default globalStyle;\n","const mq = {\n  sss: 320,\n  xxs: 360,\n  xs: 480,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200,\n  xxl: 1600,\n  xlst: 1920,\n} as const;\n\ntype BreakPoint = keyof typeof mq;\n\n/**\n * @param breakPoint xxs: 360px, xs: 480px, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1600px, xlst: 1920px\n */\nexport function mqMax(breakPoint: BreakPoint) {\n  return `@media screen and (max-width: ${mq[breakPoint] - 0.02}px)`;\n}\n\n/**\n * @param breakPoint xss: 320 ss: 360px, xs: 480px, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1600px, xlst: 1920px\n */\nexport function mqMin(breakPoint: BreakPoint) {\n  return `@media screen and (min-width: ${mq[breakPoint]}px)`;\n}\n","import React from 'react';\nimport { Global, css } from \"@emotion/react\";\n\nimport type { ReactNode } from \"react\";\nimport globalStyle from '../styles/globalStyle';\n\ntype Props = {\n  children: ReactNode;\n}\n\nfunction LayoutTemplate({ children }: Props) {\n  return (\n    <>\n      <Global styles={globalStyle()} />\n      <div css={cssProps.root}>\n        {children}\n      </div>\n    </>\n  )\n}\n\nconst cssProps = {\n  root: css({\n    width: '100%',\n    margin: '0 auto',\n    maxWidth: '1200px'\n  })\n}\n\nexport default LayoutTemplate;\n"],"names":["cssProps","root","css","width","padding","minHeight","mqMin","paddingLeft","paddingRight","marginLeft","marginRight","_ref","children","props","___EmotionJSX","_extends","name","styles","tag","color","backgroundColor","transitionProperty","transitionDuration","transitionTimingFunction","transitionDelay","link","Link","to","Tag","Object","assign","TagsRoot","LinkTag","mq","sss","xxs","xs","sm","md","lg","xl","xxl","xlst","breakPoint","React","Global","globalStyle"],"sourceRoot":""}