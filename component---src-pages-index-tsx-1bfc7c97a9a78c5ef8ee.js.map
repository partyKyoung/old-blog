{"version":3,"file":"component---src-pages-index-tsx-1bfc7c97a9a78c5ef8ee.js","mappings":"0NASAA,eAAeC,EAAUC,GAAqC,IAApC,UAAEC,GAAgCD,EAC1D,MAAME,QAAiBC,MAAM,eAAeF,EAAS,SAGrD,aAFmBC,EAASE,MAG9B,CAuCA,MAAMC,EAAW,CACfC,KAAI,CAAAC,KAAE,SAAFC,OAAE,sBAKKC,EAAeA,KAAMC,EAAAA,EAAAA,IAAA,aAAO,aAEzC,UA7CA,WACE,MAAM,KAAEC,EAAI,UAAEC,IAAcC,EAAAA,EAAAA,GAAiB,CAC3CC,SAAU,CAAC,SACXC,QAAShB,EACTiB,iBAAkB,EAClBC,iBAAmBC,GAAaA,EAASC,aAG3C,OACET,EAAAA,EAAAA,IAACU,EAAAA,EAAc,MACbV,EAAAA,EAAAA,IAACW,EAAAA,EAAS,CAACC,IAAKjB,EAASC,OACpBM,IACDF,EAAAA,EAAAA,IAACa,EAAAA,EAAMC,gBAAe,QAGrBb,SAAAA,EAAMc,SACLf,EAAAA,EAAAA,IAACa,EAAAA,EAAMG,UAAS,OAIlBf,aAAI,EAAJA,EAAMc,SACJf,EAAAA,EAAAA,IAACa,EAAAA,EAAK,KAEFZ,EAAKc,MAAME,KAAI,CAACC,EAAMC,IACbD,EAAKE,MAAMH,KAAKI,IACrBrB,EAAAA,EAAAA,IAACa,EAAAA,EAAMS,KAAI,CAACC,IAAQJ,EAAS,IAAIE,EAAKG,GAAMC,QAASJ,EAAKI,QAASC,KAAI,SAAWL,EAAKM,KAAQC,MAAOP,EAAKO,cAU/H,C","sources":["webpack://kyoungah-dev-blog/./src/pages/index.tsx"],"sourcesContent":["import { useInfiniteQuery } from '@tanstack/react-query';\nimport { css } from '@emotion/react';\n\nimport type { HeadFC } from \"gatsby\"\n\nimport Container from '../commons/components/Container';\nimport Posts from '../commons/components/Posts';\nimport LayoutTemplate from '../commons/templates/LayoutTemplate';\n\nasync function fetchPosts({ pageParam }: {pageParam: number}) {\n  const response = await fetch(`./jsons/page${pageParam}.json`);\n  const page = await response.json();\n\n  return page;\n}\n\nfunction Index() {\n  const { data, isFetched } = useInfiniteQuery({ \n    queryKey: ['posts'],\n    queryFn: fetchPosts,\n    initialPageParam: 1,\n    getNextPageParam: (lastPage) => lastPage.nextCursor,\n  })\n\n  return (\n    <LayoutTemplate>\n      <Container css={cssProps.root}>\n        { !isFetched && (\n          <Posts.FetchPostLoader />\n        )}\n        {\n          !data?.pages  && (\n            <Posts.EmptyPost />\n          )\n        }\n        {\n          data?.pages && (\n            <Posts>\n              {\n                data.pages.map((page, pageIndex) => {\n                  return page.posts.map((post) => (\n                    <Posts.Post key={`${pageIndex}-${post.id}`} excerpt={post.excerpt} link={`/posts${post.slug}`} title={post.title} />\n                  ));\n                })\n              }\n            </Posts>\n          )\n        }\n      </Container>\n    </LayoutTemplate>\n  )\n}\n\nconst cssProps = {\n  root: css({\n    position: 'relative'\n  })\n}\n\nexport const Head: HeadFC = () => <title>Home Page</title>\n\nexport default Index\n"],"names":["async","fetchPosts","_ref","pageParam","response","fetch","json","cssProps","root","name","styles","Head","___EmotionJSX","data","isFetched","useInfiniteQuery","queryKey","queryFn","initialPageParam","getNextPageParam","lastPage","nextCursor","LayoutTemplate","Container","css","Posts","FetchPostLoader","pages","EmptyPost","map","page","pageIndex","posts","post","Post","key","id","excerpt","link","slug","title"],"sourceRoot":""}