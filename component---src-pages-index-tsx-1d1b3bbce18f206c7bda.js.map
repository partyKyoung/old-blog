{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack:///./src/components/ui/Loading.tsx","webpack:///./src/components/ui/InfiniteScroll.tsx","webpack:///./src/components/index/PostLink.tsx","webpack:///./src/pages/index.tsx"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","LoadingBar","styled","div","theme","primary","Loading","InfiniteScroll","children","isLoading","onLoadMore","handleScroll","document","body","documentElement","scrollHeight","Math","max","scrollTop","clientHeight","useEffect","window","addEventListener","passive","removeEventListener","Wrapper","li","link","black","PostList","date","excerpt","slug","title","to","index","fetch","json","Index","dispatch","useGlobalDispatch","useGlobalState","currentPage","hasMore","posts","useState","setLoadings","handleGetPages","response","getPageList","totalPage","numPages","type","url","description","map","post","PostLink","id"],"mappings":"2FAAA,SAASA,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,MACjB,MAAOC,GAEP,YADAP,EAAOO,GAILF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,GAIxB,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,GAGlE,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,GAGnEjB,OAAMkB,O,oEC1BNC,EAAaC,IAAOC,IAAV,sEAAGD,CAAH,sUASEE,IAAMC,SA+BTC,EAVC,WACd,OACE,kBAACL,EAAD,KACI,8BACA,8BACA,gCCSOM,EAvCuC,SAAC,GAIjD,IAHJC,EAGI,EAHJA,SACAC,EAEI,EAFJA,UACAC,EACI,EADJA,WAEMC,EAAe,WAAM,MACSC,SAA1BC,EADiB,EACjBA,KAAMC,EADW,EACXA,gBAEd,GAAKD,GAASC,EAAd,CAIA,IAAMC,EAAeC,KAAKC,IAAIH,EAAgBC,aAAcF,EAAKE,cAC/CC,KAAKC,IAAIH,EAAgBI,UAAWL,EAAKK,WACtCJ,EAAgBK,eAEJJ,GAC/BL,MAYJ,OARAU,qBAAU,WAGR,OAFAC,OAAOC,iBAAiB,SAAUX,EAAc,CAACY,SAAS,IAEnD,WACLF,OAAOG,oBAAoB,SAAUb,MAEtC,IAGD,oCACIH,EAEAC,GAAa,kBAAC,EAAD,Q,wBCrCfgB,EAAUvB,IAAOwB,GAAV,wEAAGxB,CAAH,6ZASI,qBAAEE,MAAiBuB,QASvB,qBAAEvB,MAAiBwB,SAmDjBC,EAvBE,SAAC,GAKiB,IAJjCC,EAIiC,EAJjCA,KACAC,EAGiC,EAHjCA,QACAC,EAEiC,EAFjCA,KACAC,EACiC,EADjCA,MAEA,OACE,kBAACR,EAAD,KACE,kBAAC,OAAD,CAAMS,GAAIF,GACR,6BACE,4BACGC,EACD,8BAAOH,IAET,2BACGC,O,qCC3Db,UAA2BI,GAIzB,aAHuBC,MAAM,aAAaD,EAAd,UACLE,W,sBA8EVC,UAzED,WACZ,IAAMC,EAAWC,cADC,EAEsBC,cAAhCC,EAFU,EAEVA,YAAaC,EAFH,EAEGA,QAASC,EAFZ,EAEYA,MAFZ,EAGeC,oBAAS,GAAnCpC,EAHW,KAGAqC,EAHA,KAeZC,EAAc,oBAAG,YACrB,GAAKJ,GAIAJ,EAAL,CAIAO,GAAY,GAEZ,IAAME,Q,2CAAsBC,CAAYP,GACtBQ,EAAqBF,EAA/BG,SAAqBP,EAAUI,EAAVJ,MAE7BL,EAAS,CACPa,KAAM,QACNT,QAASO,EAAYR,EACrBE,MAAOA,IAGTE,GAAY,OApBM,qDA2BpB,OAJA1B,qBAAU,WACR2B,MACC,CAACL,EAAaC,IAGf,oCACE,kBAAC,IAAD,CACEU,IAAI,2BACJpB,MAAM,YACNqB,YAAY,2BAEd,kBAAC,IAAD,KACE,kBAAC,EAAD,CACE7C,UAAWA,EACXC,WA/Ca,WACd6B,GAILA,EAAS,CACPa,KAAM,WA2CF,4BAEIR,EAAMW,KAAI,SAACC,GAAD,OACR,kBAACC,EAAD,CACEzE,IAAKwE,EAAKE,GACV5B,KAAM0B,EAAK1B,KACXC,QAASyB,EAAKzB,QACdC,KAAMwB,EAAKxB,KACXC,MAAOuB,EAAKvB","file":"component---src-pages-index-tsx-1d1b3bbce18f206c7bda.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React from 'react';\nimport styled from 'styled-components';\n\nimport theme from '../../styles/theme';\n\nconst LoadingBar = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  div {\n    width: 0.5rem;\n    height: 0.5rem;\n    margin: 2rem .3rem;\n    background: ${theme.primary};\n    border-radius: 50%;\n    animation: 0.6s bounce infinite alternate;\n\n    &:nth-child(2) {\n      animation-delay: 0.3s;\n    }\n\n    &:nth-child(3) {\n      animation-delay: 0.6s;\n    }\n  }\n\n  @keyframes bounce {\n    to {\n      opacity: 0.3;\n      transform: translate3d(0, -1rem, 0);\n    }\n  }\n`;\n\nconst Loading = () => {\n  return (\n    <LoadingBar>\n        <div/>\n        <div/>\n        <div/>\n    </LoadingBar>\n  )\n}\n\nexport default Loading;\n","import React, { useEffect } from 'react';\n\nimport Loading from './Loading';\n\ninterface InfiniteScrollProps {\n  children: React.ReactNode;\n  isLoading: boolean;\n  onLoadMore: () => void;\n}\n\nconst InfiniteScroll: React.FC<InfiniteScrollProps> = ({\n  children,\n  isLoading,\n  onLoadMore\n}) => {\n  const handleScroll = () => {\n    const { body, documentElement } = document;\n\n    if (!body || !documentElement) {\n      return;\n    }\n\n    const scrollHeight = Math.max(documentElement.scrollHeight, body.scrollHeight);\n    const scrollTop = Math.max(documentElement.scrollTop, body.scrollTop);\n    const clientHeight = documentElement.clientHeight;\n\n    if (scrollTop + clientHeight === scrollHeight) {\n      onLoadMore();\n    }\n  }\n\n  useEffect(() => {        \n    window.addEventListener('scroll', handleScroll, {passive: true});\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    }\n  }, []);  \n\n  return (\n    <>\n      { children }\n      {\n        isLoading && <Loading />\n      }\n    </>\n  )\n}\n\nexport default InfiniteScroll\n","import React from 'react';\nimport { Link } from \"gatsby\";\nimport styled from \"styled-components\";\n\nimport theme from '../../styles/theme';\n\nconst Wrapper = styled.li`\n  width: 100%;\n  margin-bottom: 1.25rem;\n  padding: 1.5rem 1rem;\n  min-height: 3.5rem;\n\n  a {\n    &:hover {      \n      div {\n        color: ${({theme}) => theme.link};\n        transition: color 0.25s cubic-bezier(0.455, 0.03, 0.515, 0.955) 0s;\n      }\n    }  \n  }\n\n  div {\n    width: 100%;\n    height: 100%;\n    color: ${({theme}) => theme.black};\n    transition: color 0.25s cubic-bezier(0.455, 0.03, 0.515, 0.955) 0s;\n  }\n\n  h2 {\n    margin-bottom: 0.5rem;\n    font-size: 1.125rem;\n  }\n\n  span {\n    margin-left: 0.5rem;\n    font-size: 0.75rem;\n    font-weight: normal;\n  }\n\n  p {\n    font-size: 0.875rem;\n    line-height: 1.75;\n  }\n`;\n\ninterface PostsLinkProps {\n  date: string;\n  excerpt: string;\n  slug: string;\n  title: string;\n}\n\nconst PostList = ({\n  date,\n  excerpt,\n  slug,\n  title\n}: PostsLinkProps): JSX.Element => {\n  return (\n    <Wrapper>\n      <Link to={slug}>\n        <div>\n          <h2>\n            {title}\n            <span>{date}</span>\n          </h2>\n          <p>\n            {excerpt}\n          </p>\n        </div>\n      </Link>\n  </Wrapper>\n  )\n}\n\nexport default PostList;\n","import React, { useEffect, useState }  from \"react\";\n\nimport { useGlobalDispatch, useGlobalState } from '../components/context/GlobalContext';\nimport InfiniteScroll from \"../components/ui/InfiniteScroll\"\nimport Layout from \"../components/template/PageTemplate\";\nimport PostLink from '../components/index/PostLink';\nimport SEO from \"../components/layout/Seo\";\n\nasync function getPageList(index: number) {\n  const response = await fetch(`/page/page${index}.json`);\n  const posts = response.json();\n\n  return posts;\n}\n\nconst Index = () => {\n  const dispatch = useGlobalDispatch();\n  const { currentPage, hasMore, posts } = useGlobalState();\n  const [isLoading, setLoadings] = useState(false);\n\n  const handleScroll = () => {\n    if (!dispatch) {\n      return;\n    }\n\n    dispatch({\n      type: 'page'\n    });\n  };\n\n  const handleGetPages = async () => {\n    if (!hasMore) {\n      return;\n    }\n\n    if (!dispatch) {\n      return;\n    }\n\n    setLoadings(true);\n\n    const response: any = await getPageList(currentPage);\n    const { numPages: totalPage, posts } = response;\n\n    dispatch({\n      type: 'posts',\n      hasMore: totalPage > currentPage,\n      posts: posts\n    })\n\n    setLoadings(false);\n  }\n\n  useEffect(() => {  \n    handleGetPages();\n  }, [currentPage, hasMore]);\n\n  return (\n    <>\n      <SEO\n        url=\"https://dev.kyoungah.com\"\n        title=\"경아 개발 블로그\"\n        description=\"배우고 익혔던 것들을 기록하고 있습니다.\"\n      />\n      <Layout>\n        <InfiniteScroll\n          isLoading={isLoading}\n          onLoadMore={handleScroll}\n        >\n          <ul>\n            {\n              posts.map((post: any) => (\n                <PostLink \n                  key={post.id}\n                  date={post.date}\n                  excerpt={post.excerpt}\n                  slug={post.slug}\n                  title={post.title}\n                />\n              ))\n            }\n          </ul>\n          </InfiniteScroll>\n        </Layout>\n    </>\n  )\n}\n\nexport default Index;"],"sourceRoot":""}