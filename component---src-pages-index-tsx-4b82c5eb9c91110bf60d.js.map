{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack:///./src/components/ui/Loading.tsx","webpack:///./src/components/ui/InfiniteScroll.tsx","webpack:///./src/components/index/PostLink.tsx","webpack:///./src/pages/index.tsx","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/@babel/runtime/regenerator/index.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","LoadingBar","styled","div","theme","primary","Loading","InfiniteScroll","children","isLoading","onLoadMore","handleScroll","document","body","documentElement","scrollHeight","Math","max","scrollTop","clientHeight","useEffect","window","addEventListener","passive","removeEventListener","Wrapper","li","link","black","PostList","date","excerpt","slug","title","to","getPageList","index","a","fetch","response","posts","json","Index","dispatch","useGlobalDispatch","useGlobalState","currentPage","hasMore","useState","setLoadings","handleGetPages","totalPage","numPages","type","url","description","map","post","PostLink","id","runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","defineProperty","enumerable","configurable","writable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","method","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","makeInvokeMethod","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","result","__await","unwrapped","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function"],"mappings":"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","file":"component---src-pages-index-tsx-4b82c5eb9c91110bf60d.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React from 'react';\nimport styled from 'styled-components';\n\nimport theme from '../../styles/theme';\n\nconst LoadingBar = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  div {\n    width: 0.5rem;\n    height: 0.5rem;\n    margin: 2rem .3rem;\n    background: ${theme.primary};\n    border-radius: 50%;\n    animation: 0.6s bounce infinite alternate;\n\n    &:nth-child(2) {\n      animation-delay: 0.3s;\n    }\n\n    &:nth-child(3) {\n      animation-delay: 0.6s;\n    }\n  }\n\n  @keyframes bounce {\n    to {\n      opacity: 0.3;\n      transform: translate3d(0, -1rem, 0);\n    }\n  }\n`;\n\nconst Loading = () => {\n  return (\n    <LoadingBar>\n        <div/>\n        <div/>\n        <div/>\n    </LoadingBar>\n  )\n}\n\nexport default Loading;\n","import React, { useEffect } from 'react';\n\nimport Loading from './Loading';\n\ninterface InfiniteScrollProps {\n  children: React.ReactNode;\n  isLoading: boolean;\n  onLoadMore: () => void;\n}\n\nconst InfiniteScroll: React.FC<InfiniteScrollProps> = ({\n  children,\n  isLoading,\n  onLoadMore\n}) => {\n  const handleScroll = () => {\n    const { body, documentElement } = document;\n\n    if (!body || !documentElement) {\n      return;\n    }\n\n    const scrollHeight = Math.max(documentElement.scrollHeight, body.scrollHeight);\n    const scrollTop = Math.max(documentElement.scrollTop, body.scrollTop);\n    const clientHeight = documentElement.clientHeight;\n\n    if (scrollTop + clientHeight === scrollHeight) {\n      onLoadMore();\n    }\n  }\n\n  useEffect(() => {        \n    window.addEventListener('scroll', handleScroll, {passive: true});\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    }\n  }, []);  \n\n  return (\n    <>\n      { children }\n      {\n        isLoading && <Loading />\n      }\n    </>\n  )\n}\n\nexport default InfiniteScroll\n","import React from 'react';\nimport { Link } from \"gatsby\";\nimport styled from \"styled-components\";\n\nimport theme from '../../styles/theme';\n\nconst Wrapper = styled.li`\n  width: 100%;\n  margin-bottom: 1.25rem;\n  padding: 1.5rem 1rem;\n  min-height: 3.5rem;\n\n  a {\n    &:hover {      \n      div {\n        color: ${({theme}) => theme.link};\n        transition: color 0.25s cubic-bezier(0.455, 0.03, 0.515, 0.955) 0s;\n      }\n    }  \n  }\n\n  div {\n    width: 100%;\n    height: 100%;\n    color: ${({theme}) => theme.black};\n    transition: color 0.25s cubic-bezier(0.455, 0.03, 0.515, 0.955) 0s;\n  }\n\n  h2 {\n    margin-bottom: 0.5rem;\n    font-size: 1.125rem;\n  }\n\n  span {\n    margin-left: 0.5rem;\n    font-size: 0.75rem;\n    font-weight: normal;\n  }\n\n  p {\n    font-size: 0.875rem;\n    line-height: 1.75;\n  }\n`;\n\ninterface PostsLinkProps {\n  date: string;\n  excerpt: string;\n  slug: string;\n  title: string;\n}\n\nconst PostList = ({\n  date,\n  excerpt,\n  slug,\n  title\n}: PostsLinkProps): JSX.Element => {\n  return (\n    <Wrapper>\n      <Link to={slug}>\n        <div>\n          <h2>\n            {title}\n            <span>{date}</span>\n          </h2>\n          <p>\n            {excerpt}\n          </p>\n        </div>\n      </Link>\n  </Wrapper>\n  )\n}\n\nexport default PostList;\n","import React, { useEffect, useState }  from \"react\";\n\nimport { useGlobalDispatch, useGlobalState } from '../components/context/GlobalContext';\nimport InfiniteScroll from \"../components/ui/InfiniteScroll\"\nimport Layout from \"../components/template/PageTemplate\";\nimport PostLink from '../components/index/PostLink';\nimport SEO from \"../components/layout/Seo\";\n\nasync function getPageList(index: number) {\n  const response = await fetch(`/page/page${index}.json`);\n  const posts = response.json();\n\n  return posts;\n}\n\nconst Index = () => {\n  const dispatch = useGlobalDispatch();\n  const { currentPage, hasMore, posts } = useGlobalState();\n  const [isLoading, setLoadings] = useState(false);\n\n  const handleScroll = () => {\n    if (!dispatch) {\n      return;\n    }\n\n    dispatch({\n      type: 'page'\n    });\n  };\n\n  const handleGetPages = async () => {\n    if (!hasMore) {\n      return;\n    }\n\n    if (!dispatch) {\n      return;\n    }\n\n    setLoadings(true);\n\n    const response: any = await getPageList(currentPage);\n    const { numPages: totalPage, posts } = response;\n\n    dispatch({\n      type: 'posts',\n      hasMore: totalPage > currentPage,\n      posts: posts\n    })\n\n    setLoadings(false);\n  }\n\n  useEffect(() => {  \n    handleGetPages();\n  }, [currentPage, hasMore]);\n\n  return (\n    <>\n      <SEO\n        url=\"https://dev.kyoungah.com\"\n        title=\"경아 개발 블로그\"\n        description=\"배우고 익혔던 것들을 기록하고 있습니다.\"\n      />\n      <Layout>\n        <InfiniteScroll\n          isLoading={isLoading}\n          onLoadMore={handleScroll}\n        >\n          <ul>\n            {\n              posts.map((post: any) => (\n                <PostLink \n                  key={post.id}\n                  date={post.date}\n                  excerpt={post.excerpt}\n                  slug={post.slug}\n                  title={post.title}\n                />\n              ))\n            }\n          </ul>\n          </InfiniteScroll>\n        </Layout>\n    </>\n  )\n}\n\nexport default Index;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","module.exports = require(\"regenerator-runtime\");\n"],"sourceRoot":""}