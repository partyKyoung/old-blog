{"version":3,"file":"component---src-pages-index-tsx-ae4e021d0ede7a24eb1d.js","mappings":"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","sources":["webpack://kyoungah-dev-blog/./src/commons/components/Posts/PostsRoot.tsx","webpack://kyoungah-dev-blog/./src/commons/components/Posts/EmptyPost.tsx","webpack://kyoungah-dev-blog/./src/commons/components/Posts/FetchPostLoader.tsx","webpack://kyoungah-dev-blog/./src/commons/components/Posts/Post.tsx","webpack://kyoungah-dev-blog/./src/commons/components/Posts/index.tsx","webpack://kyoungah-dev-blog/./src/pages/index.tsx"],"sourcesContent":["import { css, keyframes } from '@emotion/react';\n\nimport type { ReactNode } from 'react';\n\ntype Props = {\n    children: ReactNode;\n}\n\nfunction PostsRoot({children}: Props) {\n    return (\n        <ul css={cssProps.root}>\n            {children}     \n        </ul>\n    )\n}\n\nconst show = keyframes({\n    from: {opacity: 0},\n    to: {opacity: 1}\n})\n\nconst cssProps = {\n    root: css({\n        width: '100%',\n        animation: `0.6s ${show}`,\n    })\n}\n\nexport default PostsRoot;","import { css } from '@emotion/react';\n\nfunction EmptyPost() {\n    return (\n        <div css={cssProps.root}>\n            <h3 css={cssProps.commingSoon}>COMING SOON</h3>\n            <br/>\n            <span css={cssProps.emptyPostText}>아직 등록된 포스트가 없어요<br/>조금만 기다려주세요</span>\n        </div>\n    );\n};\n\nconst cssProps = {\n    root: css({\n        position: 'absolute',\n        width: '100%',\n        marginBottom: 16,\n        textAlign: 'center',\n        fontSize: 18,\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n    }),\n    commingSoon: css({\n        fontSize: 24,\n        fontWeight: 600,\n        color: 'hsla(var(--palette-blue-100), 100%)'\n    }),\n    emptyPostText: css({\n        fontSize: 18,\n        lineHeight: 1.5,\n        color: 'hsla(var(--palette-gray-100), 100%)'\n    })\n}\n\nexport default EmptyPost;","import { css, keyframes } from '@emotion/react';\n\nconst Loading = () => {\n  return (\n    <div css={cssProps.root}>\n        <span />\n        <span />\n        <span />\n    </div>\n  )\n}\n\nconst bounce = keyframes({\n    to: {\n        opacity: '0.3',\n        transform: 'translate3d(0, -16px, 0)'\n      }\n});\n\nconst cssProps = {\n    root: css({\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        gap: 6,\n\n        ['span']: {\n            width: 8,\n            height: 8,\n            backgroundColor: 'var(--primary-color)',\n            borderRadius: '50%',\n            animation: `0.6s ${bounce} infinite alternate`,\n        \n            ['&:nth-of-type(2)']: {\n              animationDelay: '0.3s'\n            },\n        \n            ['&:nth-of-type(3)']: {\n              animationDelay: '0.6s'\n            }\n        }\n    })\n}\n\nexport default Loading;","import { Link } from 'gatsby';\nimport { css } from '@emotion/react';\n\ntype Props = {\n    excerpt: string;\n    link: string;\n    title: string;\n}\n\nfunction PostListItem({\n    link,\n    title,\n    excerpt\n}: Props) {\n    return (\n        <li css={cssProps.root}>\n            <Link to={link} css={cssProps.postLink}>\n                <h3 css={cssProps.postTitle}>{title}</h3>\n                <p css={cssProps.postExcerpt}>{excerpt}</p>\n            </Link>\n        </li>\n    );\n}\n\nconst cssProps = {\n    root: css({\n        width: '100%',\n        listStyle: 'none',\n        ['&:not(:last-of-type)']: {\n            marginBottom: 60\n        }\n    }),\n    postLink: css({\n        color: '#000000',\n\n    }),\n    postTitle: css({\n        marginBottom: 8,\n        fontSize: 20,\n        fontWeight: 600,\n\n        ['a:hover &']: {\n            color: 'hsla(var(--base-blue), 29%)',\n            transition: 'color 0.25s cubic-bezier(0.455, 0.03, 0.515, 0.955) 0s'     \n         }\n\n    }),\n    postExcerpt: css({\n        lineHeight: 1.5,\n        fontSize: 15,\n        fontWeight: 400,\n\n        ['a:hover &']: {\n            color: 'hsla(var(--base-blue), 39%)',\n            transition: 'color 0.25s cubic-bezier(0.455, 0.03, 0.515, 0.955) 0s'     \n         }\n    })\n}\n\nexport default PostListItem;","import PostsRoot from \"./PostsRoot\";\n\nimport EmptyPost from \"./EmptyPost\";\nimport FetchPostLoader from './FetchPostLoader';\nimport Post from \"./Post\";\n\nconst Posts = Object.assign(PostsRoot, {\n    EmptyPost,\n    FetchPostLoader,\n    Post\n});\n\nexport default Posts;\n","import { useInfiniteQuery } from '@tanstack/react-query';\nimport { css } from '@emotion/react';\n\nimport type { HeadFC } from \"gatsby\"\n\nimport Container from '../commons/components/Container';\nimport Posts from '../commons/components/Posts';\nimport LayoutTemplate from '../commons/templates/LayoutTemplate';\n\nasync function fetchPosts({ pageParam }: {pageParam: number}) {\n  const response = await fetch(`./jsons/page${pageParam}.json`);\n  const page = await response.json();\n\n  return page;\n}\n\nfunction Index() {\n  const { data, isFetched } = useInfiniteQuery({ \n    queryKey: ['posts'],\n    queryFn: fetchPosts,\n    initialPageParam: 1,\n    getNextPageParam: (lastPage) => lastPage.nextCursor,\n  })\n\n  return (\n    <LayoutTemplate>\n      <Container css={cssProps.root}>\n        { !isFetched && (\n          <Posts.FetchPostLoader />\n        )}\n        {\n          !data?.pages  && (\n            <Posts.EmptyPost />\n          )\n        }\n        {\n          data?.pages && (\n            <Posts>\n              {\n                data.pages.map((page, pageIndex) => {\n                  return page.posts.map((post) => (\n                    <Posts.Post key={`${pageIndex}-${post.id}`} excerpt={post.excerpt} link={`/posts${post.slug}`} title={post.title} />\n                  ));\n                })\n              }\n            </Posts>\n          )\n        }\n      </Container>\n    </LayoutTemplate>\n  )\n}\n\nconst cssProps = {\n  root: css({\n    position: 'relative'\n  })\n}\n\nexport const Head: HeadFC = () => <title>Home Page</title>\n\nexport default Index\n"],"names":["show","keyframes","from","opacity","to","cssProps","root","css","width","animation","_ref","children","___EmotionJSX","name","styles","commingSoon","emptyPostText","bounce","transform","display","alignItems","justifyContent","gap","height","backgroundColor","borderRadius","animationDelay","Loading","listStyle","marginBottom","postLink","postTitle","fontSize","fontWeight","color","transition","postExcerpt","lineHeight","link","title","excerpt","Link","Object","assign","PostsRoot","EmptyPost","FetchPostLoader","Post","async","fetchPosts","pageParam","response","fetch","json","Head","data","isFetched","useInfiniteQuery","queryKey","queryFn","initialPageParam","getNextPageParam","lastPage","nextCursor","LayoutTemplate","Container","Posts","pages","map","page","pageIndex","posts","post","key","id","slug"],"sourceRoot":""}