{"version":3,"sources":["webpack:///./src/components/PostLink.tsx","webpack:///./src/components/Pagination.tsx","webpack:///./src/templates/blogListTemplate.tsx"],"names":["Wrapper","styled","div","theme","blackColor","font18","font12","font14","PostLink","post","to","frontmatter","path","title","date","excerpt","ul","Pagination","pageContext","currentPage","numPages","isFirst","isLast","prevPage","toString","nextPage","Array","from","length","_","i","key","pageQuery","Index","data","Posts","allMarkdownRemark","edges","map","edge","node","id","SEO","url","description","Layout"],"mappings":"k5BAIA,IAAMA,EAAUC,IAAOC,IAAV,IAoBA,qBAAEC,MAAiBC,YAMf,qBAAED,MAAiBE,QAKnB,qBAAEF,MAAiBG,QAKnB,qBAAEH,MAAiBI,SAkCrBC,EAlBkB,SAAC,GAAW,IAAVC,EAAU,EAAVA,KACjC,OACE,kBAACT,EAAD,CAASG,MAAOA,KACd,kBAAC,IAAD,CAAMO,GAAID,EAAKE,YAAYC,MACzB,6BACA,4BACGH,EAAKE,YAAYE,MAClB,8BAAOJ,EAAKE,YAAYG,OAE1B,2BACGL,EAAKM,a,2SC7DhB,IAAMf,EAAUC,IAAOe,GAAV,KA6CEC,EA5BI,SAAC,GAAuB,IAAtBC,EAAsB,EAAtBA,YACXC,EAAyBD,EAAzBC,YAAaC,EAAYF,EAAZE,SACfC,EAA0B,IAAhBF,EACVG,EAASH,IAAgBC,EACzBG,EAAWJ,EAAc,GAAM,EAAI,KAAOA,EAAc,GAAGK,WAC3DC,GAAYN,EAAc,GAAGK,WAEnC,OACE,kBAAC,EAAD,MAEKH,GACD,4BAAI,kBAAC,IAAD,CAAMX,GAAIa,GAAV,OAGJG,MAAMC,KAAK,CAACC,OAAQR,GAAW,SAACS,EAAGC,GAAJ,OAC7B,wBAAIC,IAAG,cAAgBD,GACrB,kBAAC,IAAD,CAAMpB,GAAE,KAAMoB,EAAI,EAAJ,IAAWA,EAAI,GAAM,KAAOA,EAAI,OAKjDR,GACD,4BAAI,kBAAC,IAAD,CAAMZ,GAAIe,GAAV,S,4KClCZ,IAAMzB,EAAUC,IAAOC,IAAV,KA0CA8B,GAFEC,UAxBD,SAAC,GAA6B,IAA5BC,EAA4B,EAA5BA,KAAMhB,EAAsB,EAAtBA,YAGdiB,EAFYD,EAAKE,kBAAfC,MAEYC,IAAI,SAACC,GACvB,OAAO,kBAAC,EAAD,CAAUR,IAAKQ,EAAKC,KAAKC,GAAIhC,KAAM8B,EAAKC,SAGjD,OACE,oCACE,kBAACE,EAAA,EAAD,CACEC,IAAI,2BACJ9B,MAAM,YACN+B,YAAY,2BAEd,kBAACC,EAAA,EAAD,KACE,kBAAC,EAAD,KACGV,EACD,kBAAC,EAAD,CAAYjB,YAAaA,QASV","file":"component---src-templates-blog-list-template-tsx-8f56e620e23dd3e47b61.js","sourcesContent":["import React from 'react';\nimport { Link } from \"gatsby\";\nimport styled, {theme} from '../styledComponents';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  margin-bottom: 1rem;\n  padding: 1.5rem;\n  border-radius: 4px; \n  box-sizing: border-box;\n  min-height: 65px;\n\n  a {\n    &:hover {      \n      div {\n        color: #adc2cb;\n        transition: color 0.25s cubic-bezier(0.455, 0.03, 0.515, 0.955) 0s;\n      }\n    }  \n  }\n\n  div {\n    width: 100%;\n    height: 100%;\n    color: ${({theme}) => theme.blackColor};\n    transition: color 0.25s cubic-bezier(0.455, 0.03, 0.515, 0.955) 0s;\n  }\n\n  h2 {\n    margin-bottom: 0.5rem;\n    font-size: ${({theme}) => theme.font18}\n  }\n\n  span {\n    margin-left: 0.5rem;\n    font-size: ${({theme}) => theme.font12};\n    font-weight: normal;\n  }\n\n  p {\n    font-size: ${({theme}) => theme.font14};\n    line-height: 1.5;\n  }\n`;\n\n// interface PostLInkProps {\n//   post: {\n//     excerpt: string;\n//     frontmatter: {\n//       date: string;\n//       path: string;\n//       title: string;\n//     };\n//   };\n// }\n\nconst PostLink: React.SFC<any> = ({post}) => {\n  return (\n    <Wrapper theme={theme}>\n      <Link to={post.frontmatter.path}>\n        <div>\n        <h2>\n          {post.frontmatter.title}\n          <span>{post.frontmatter.date}</span>\n        </h2>\n        <p>\n          {post.excerpt}\n        </p>\n        </div>\n      </Link>\n    </Wrapper>\n  );\n}\n\nexport default PostLink\n","import React from 'react';\nimport { Link } from \"gatsby\";\n\nimport styled from '../styledComponents';\n\nconst Wrapper = styled.ul`\n  display: flex;\n  margin-top: 1rem;\n  justify-content: center;\n  align-items: center;\n\n  li {\n    margin-left: 0.3125rem;\n    margin-right: 0.3125rem;\n  }\n`;\n\ninterface PageContextProps {\n  currentPage: number;\n  numPages: number;\n}\n\nconst Pagination = ({pageContext}: any) => {\n  const { currentPage, numPages} = pageContext;\n  const isFirst = currentPage === 1;\n  const isLast = currentPage === numPages;\n  const prevPage = currentPage - 1 === 1 ? '/' : (currentPage - 1).toString()\n  const nextPage = (currentPage + 1).toString()\n\n  return (\n    <Wrapper>\n      {\n        !isFirst &&\n        <li><Link to={prevPage}>이전</Link></li>\n      }\n      {\n        Array.from({length: numPages}, (_, i) => (\n          <li key={`[agination-${i}`}>\n            <Link to={`/${i > 0 ? `${i + 1}` : ''}`}>{i + 1}</Link>\n          </li>\n        ))\n      }\n      {\n        !isLast &&\n        <li><Link to={nextPage}>다음</Link></li>\n      }\n    </Wrapper>\n  )\n}\n\nexport default Pagination\n","import React  from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport SEO from \"../components/SEO\"\nimport Layout from \"../components/Layout\"\nimport PostLink from \"../components/PostLink\"\nimport Pagination from '../components/Pagination';\n\nimport styled from '../styledComponents';\n\nconst Wrapper = styled.div`\n  padding: 2rem 1rem;\n`;\n\ninterface EdgeTypes {\n  node: {\n    id: string\n    excerpt: string\n    frontmatter: {\n      date: string\n      path: string\n      title: string\n    }\n  }\n}\n\nconst Index = ({data, pageContext}: any) => {\n  const { edges } = data.allMarkdownRemark;\n\n  const Posts = edges.map((edge: EdgeTypes) => {\n    return <PostLink key={edge.node.id} post={edge.node} />\n  })\n\n  return (\n    <>\n      <SEO\n        url=\"https://dev.kyoungah.com\"\n        title=\"경아 개발 블로그\"\n        description=\"배우고 익혔던 것들을 기록하고 있습니다.\"\n      />\n      <Layout>\n        <Wrapper>\n          {Posts}\n          <Pagination pageContext={pageContext}/>\n        </Wrapper>\n        </Layout>\n    </>\n  )\n}\n\nexport default Index;\n\nexport const pageQuery = graphql`\n  query blogPageQuery($skip: Int!, $limit: Int!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          excerpt\n          frontmatter {\n            date(formatString: \"DD MMMM, YYYY\")\n            title\n            path\n          }\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}