{"componentChunkName":"component---src-templates-blog-template-tsx","path":"/base/algorithms/dynamic-programming","webpackCompilationHash":"935d6583fdfd51241445","result":{"data":{"markdownRemark":{"id":"a6b8e4ea-e48a-58b8-9228-b36d39664052","html":"<h2>동적 프로그래밍 방식</h2>\n<p>문제의 크기가 작은 소문제에 대한 해를 저장해 놓고, 이를 이용하여 크기가 보다 큰 문제의 해를 점진적으로 만들어가는 상향식 접근 방법.</p>\n<ul>\n<li>각 작은 문제는 원래의 문제와 동일한 문제지만 입력의 크기만 작다.</li>\n<li>입력의 크기가 아주 작은 단순한 문제가 되면 쉽게 해를 구할 수 있고 이를 테이블에 저장한다.</li>\n<li>이후 해당 소문제의 해가 필요할 떄마다 테이블에 저장된 결과를 바로 이용한다.</li>\n</ul>\n<p>동적 프로그래밍 방법은 주로 최솟값 또는 최댓값 구하는 최적화 문제에 사용된다.</p>\n<h3>최적성의 원리</h3>\n<p>동적 프로그래밍 방법은 최적성의 원리가 반드시 성립하는 최적화 문제의 대상이 된다.</p>\n<ul>\n<li><strong>최적성의 원리</strong>: 주어진 문제에 대한 최적해는 주어진 문제의 소문제에 대한 문제에 대한 최적해로 구성된다는 원리.</li>\n</ul>\n<h2>동적 프로그래밍 방법의 처리 과정</h2>\n<ol>\n<li>주어진 문제에 대해서 최적해를 제공하는 점화식을 도출한다.</li>\n<li>가장 작은 소문제부터 점화식의 해를 구한 뒤 이를 테이블에 저장한ㄷ나.</li>\n<li>테이블에 저장되어 있는 소문제의 해를 이용하여 점차적으로 큰 상위 문제의 해를 구한다.</li>\n</ol>\n<h2>Reference</h2>\n<ul>\n<li><a href=\"http://press.knou.ac.kr/goods/textBookView.do?condCmdtCode=9788920026935&#x26;condLscValue=001&#x26;condYr=&#x26;condSmst=\">방송대 컴퓨터과학과 알고리즘 5강</a></li>\n</ul>","frontmatter":{"date":"2019년 05월 12일","description":"문제의 크기가 작은 소문제에 대한 해를 저장해 놓고, 이를 이용하여 크기가 보다 큰 문제의 해를 점진적으로 만들어가는 상향식 접근 방법.","path":"/base/algorithms/dynamic-programming","title":"동적 프로그래밍 방법"}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}}