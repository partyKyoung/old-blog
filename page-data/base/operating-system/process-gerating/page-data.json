{"componentChunkName":"component---src-templates-blog-template-tsx","path":"/base/operating-system/process-gerating","webpackCompilationHash":"69d7a04769fb54056542","result":{"data":{"markdownRemark":{"id":"7b4ccce1-1b55-5d07-b15c-2a3efa3c371f","html":"<h3>프로세스 생성</h3>\n<p>운영체제가 새로은 프로세스를 생성하고 실행하려면 프로세스 관리를 위한 프로세스 제어 블록을 만든 후에 프로세스에 주소 공간을 할당해야 한다.</p>\n<ol>\n<li>새로운 프로세스에 프로세스 식별자 할당.</li>\n<li>프로세스의 모든 구성 요소를 포함할 수 있는 주소 공간과 프로세스 제어 블록 공간 할당.</li>\n<li>프로세스 제어 블록 초기화.</li>\n<li>준비 큐에 삽입.</li>\n</ol>\n<p>일반적으로 프로세스는 작업을 수행하기 위해 자원이 필요하다. 한 프로세스가 자식 프로세스를 생성하면 생성된 자식 프로세스는 운영체제로 부터 직접 자원을 얻거나 부모 프로세스 자원의 일부를 얻는다. 하나의 프로세스가 프로세스 생성 시스템 호출을 통해 새로운 프로세스를 생성할 수 있다. ex) fork()</p>\n<ul>\n<li>호출하는 프로세스: 부모 프로세스</li>\n<li>생성되는 프로세스: 자식 프로세스</li>\n</ul>\n<p>시스템 프로세스와 사용자 프로세스 모두 자식 프로세스를 생성할 수 있다. 즉 부모 프로세스가 될 수 있다.</p>\n<p>부모 프로세스는 자식 프로세스에게 자원을 나눠주거나 공유할 수 잇도록 한다. 보통 자식 프로세스의 자원은 부모 프로세스의 자원으로 제한하는데 과도한 자식 프로세스 생성에 따른 시스템 과부하 방지를 위해서이다.</p>\n<h3>프로세스 종료</h3>\n<p>프로세스의 마지막 명령이 실행을 마치는 경우 또는 프로세스 종료 시스템 호출을 통하는 경우(ex: exit()) 프로세스는 종료된다. 프로세스 종료 후 부모 프로세스에게 실행 결과를 되돌려 준다.</p>\n<p>프로세스 종료 시스템 호출은 부모 프로세스에 의해서만 호출 된다. 부모 프로세스는 다음과 같은 이유 때문에 자식 프로세스의 실행을 종료시킬 수 있다.</p>\n<ul>\n<li>자식 프로세스가 할당된 자원의 사용을 초과할 때.</li>\n<li>자식 프로세스에게 할당된 작업이 더 이상 필요치 않을 때.</li>\n</ul>\n<p>부모 프로세스가 종료되면 자식 프로세스도 모두 종료된다.</p>\n<h2>Reference</h2>\n<ul>\n<li><a href=\"http://press.knou.ac.kr/goods/textBookView.do?condCmdtCode=9788920017322&#x26;condLscValue=001&#x26;condYr=&#x26;condSmst=\">방송대 컴퓨터과학과 운영체제 2강</a></li>\n</ul>","frontmatter":{"date":"2019년 03월 06일","description":null,"path":"/base/operating-system/process-gerating","title":"프로세스의 생성과 종료"}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}}