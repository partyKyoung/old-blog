{"componentChunkName":"component---src-templates-blog-template-tsx","path":"/etc/blog-migration-2","webpackCompilationHash":"26a80cebaa4a88426797","result":{"data":{"markdownRemark":{"id":"d64ab2b4-4901-5197-acc9-095227733f69","html":"<p><a href=\"/etc/blog-migration/\">Hexo에서 Gatsby로 블로그 마이그레이션 작업</a>을 계속 이어 하면서 과정을 마저 정리 하였다.</p>\n<p>이번에는 페이징 작업이랑 댓글 작업을 하였는데 역시 Gatsby 공식 문서에 관련 플러그인 문서화가 굉장히 잘되어 있어서 문제 없이 할 수 있었다.</p>\n<h2>disqus</h2>\n<p>댓글은 disqus를 사용했다. <a href=\"https://github.com/utterance/utterances\">utterances</a>도 고려해봤는데 github 아이디가 있어아만 댓글을 쓸 수 있다는 점이 단점으로 느껴져서 그냥 disqus를 계속 사용하기로 했다.</p>\n<p>Gatsby에서 disqus를 사용하려면 gatsby-plugin-disqus 플러그인을 설치하면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">yarn add gatsby-plugin-disqus</code></pre></div>\n<h3>gatsby-config.js</h3>\n<p>plugins에 gatsby-plugin-disqus를 추가해주자.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 생략...</span>\n  plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token comment\">// 생략...</span>\n    <span class=\"token punctuation\">{</span>\n      resolve<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`gatsby-plugin-disqus`</span></span><span class=\"token punctuation\">,</span>\n      options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        shortname<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`kyoungah`</span></span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// this (optional) plugin enables Progressive Web App + Offline functionality</span>\n    <span class=\"token comment\">// To learn more, visit: https://gatsby.dev/offline</span>\n    <span class=\"token comment\">// `gatsby-plugin-offline`,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>blogTemplate.tsx</h3>\n<p>포스트에 관련된 정보를 blogTemplate 컴포넌트에서 호출하고 있기 때문에 여기에 댓글 컴포넌트를 삽입하기로 했다. query문 호출 부분에 id를 호출 할 수 있도록 추가해주었고 gatsby-plugin-disqus의 Disqus 컴포넌트를 사용하여 아주 쉽게 댓글 영역을 추가해주었다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> graphql <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"gatsby\"</span>\n<span class=\"token keyword\">import</span> styled<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> theme <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"../styledComponents\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Disqus <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"gatsby-plugin-disqus\"</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Template</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  data<span class=\"token punctuation\">,</span> <span class=\"token comment\">// this prop will be injected by the GraphQL query below.</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">:</span> any<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> markdownRemark <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> data <span class=\"token comment\">// data.markdownRemark holds our post data</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> frontmatter<span class=\"token punctuation\">,</span> html<span class=\"token punctuation\">,</span> id <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> markdownRemark\n  <span class=\"token keyword\">const</span> disqusConfig <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    url<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token string\">\"https://dev.kyoungah.com\"</span> <span class=\"token operator\">+</span> frontmatter<span class=\"token punctuation\">.</span>path<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">,</span>\n    identifier<span class=\"token punctuation\">:</span> id<span class=\"token punctuation\">,</span>\n    title<span class=\"token punctuation\">:</span> frontmatter<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\n      <span class=\"token comment\">/** 포스트 컨텐츠 **/</span>\n      <span class=\"token operator\">&lt;</span>Disqus config<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>disqusConfig<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// grapthql을 이용하여 markdown에서 데이터를 가지고 온다.</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> pageQuery <span class=\"token operator\">=</span> graphql<span class=\"token template-string\"><span class=\"token string\">`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      id\n      html\n      frontmatter {\n        date(formatString: \"YYYY년 MM월 DD일\")\n        description\n        path\n        title\n      }\n    }\n  }\n`</span></span></code></pre></div>","frontmatter":{"date":"2019년 07월 21일","description":"Hexo에서 Gatsby로 블로그 마이그레이션 하는 과정을 정리하였습니다.","path":"/etc/blog-migration-2","title":"Hexo 에서 Gatsby로 블로그 마이그레이션 하기 2"}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}}