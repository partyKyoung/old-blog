{"componentChunkName":"component---src-templates-blog-template-tsx","path":"/etc/blog-migration","webpackCompilationHash":"04b35bb1e7e18e473c98","result":{"data":{"markdownRemark":{"html":"<pre><code>npm install -g gatsby-cli\n</code></pre>\n<pre><code>gatsby new gatsby-site\n</code></pre>\n<pre><code>gatsby develop\n</code></pre>\n<p>markdown 파일에 path 필요</p>\n<pre><code class=\"language-md\">---\ntitle: Hexo 에서 Gatsby로 블로그 마이그레이션 하기\ndate: 2019-07-04\n# tags:\n#   - etc\n# categories:\n#   - Etc\npath: /etc/blog-migration\n---\n</code></pre>\n<h2>blogTemplate</h2>\n<pre><code class=\"language-js\">import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n}) {\n  const { markdownRemark } = data // data.markdownRemark holds our post data\n  const { frontmatter, html } = markdownRemark\n  return (\n    &#x3C;div className=\"blog-post-container\">\n      &#x3C;div className=\"blog-post\">\n        &#x3C;h1>{frontmatter.title}&#x3C;/h1>\n        &#x3C;h2>{frontmatter.date}&#x3C;/h2>\n        &#x3C;div\n          className=\"blog-post-content\"\n          dangerouslySetInnerHTML={{ __html: html }}\n        />\n      &#x3C;/div>\n    &#x3C;/div>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        title\n      }\n    }\n  }\n`\n</code></pre>\n<h2>gatsby-config.js</h2>\n<pre><code class=\"language-js\">// 생략\n\n  plugins: [\n    // 생략\n\n    {\n      resolve: `gatsby-source-filesystem`,\n      options: {\n        name: `posts`,\n        path: `${__dirname}/src/posts`\n      },\n    },\n    `gatsby-transformer-remark`,\n\n    // 생략\n  ],\n\n// 생략\n</code></pre>\n<h2>gatsby-node.js</h2>\n<pre><code class=\"language-js\">const path = require(`path`)\n\nexports.createPages = ({ actions, graphql }) => {\n  const { createPage } = actions\n\n  const blogPostTemplate = path.resolve(`src/templates/blogTemplate.js`)\n\n  return graphql(`\n    {\n      allMarkdownRemark(\n        sort: { order: DESC, fields: [frontmatter___date] }\n        limit: 1000\n      ) {\n        edges {\n          node {\n            frontmatter {\n              path\n            }\n          }\n        }\n      }\n    }\n  `).then(result => {\n    if (result.errors) {\n      return Promise.reject(result.errors)\n    }\n\n    return result.data.allMarkdownRemark.edges.forEach(({ node }) => {\n      createPage({\n        path: node.frontmatter.path,\n        component: blogPostTemplate,\n        context: {}, // additional data can be passed via context\n      })\n    })\n  })\n}\n</code></pre>\n<pre><code>yarn add typescript @types/react @types/react-dom gatsby-plugin-typescript @types/react-helmet\n</code></pre>\n<pre><code>yarn add gatsby-plugin-styled-components styled-components babel-plugin-styled-components\n</code></pre>\n<pre><code>yarn add gatsby-plugin-global-styles @nfront/global-styles\n</code></pre>\n<p><a href=\"https://medium.com/maxime-heckel/getting-started-with-typescript-on-gatsby-8544b47c1d27\">https://medium.com/maxime-heckel/getting-started-with-typescript-on-gatsby-8544b47c1d27</a></p>","frontmatter":{"date":"July 04, 2019","path":"/etc/blog-migration","title":"Hexo 에서 Gatsby로 블로그 마이그레이션 하기"}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}}